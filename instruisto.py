from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardMarkup, InlineKeyboardButton
from config import TOKEN_API
from random import random

HELP_COMMAND = """–ü—Ä–∏–≤–µ—Ç, —ç—Å–ø–µ—Ä–∞–Ω—Ç–∏—Å—Ç! –Ø –±–æ—Ç-–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —è–∑—ã–∫–∞ <strong>–≠—Å–ø–µ—Ä–∞–Ω—Ç–æ</strong>. –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤—ã—É—á–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π —è–∑—ã–∫, —Ä–∞—Å—Å–∫–∞–∂—É –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –∏ –ø–æ–ª–µ–∑–Ω–æ–≥–æ –æ–± –≠—Å–ø–µ—Ä–∞–Ω—Ç–æ. –û–∑–Ω–∞–∫–æ–º—å—Å—è —Å –º–æ–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –Ω–∏–∂–µ:

<strong>/help</strong> - <em>—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥</em>
<strong>/start</strong> - <em>–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞</em>
<strong>/contact</strong> - <em>—Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º</em>
<strong>/links</strong> - <em>–ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏</em>"""

bot = Bot(TOKEN_API)
dp = Dispatcher(bot)

kb = ReplyKeyboardMarkup(resize_keyboard=True)
kb.add(KeyboardButton('/help')).add(KeyboardButton('/start')).add(KeyboardButton('/contact')).add(KeyboardButton('/links'))

ikb = InlineKeyboardMarkup(row_width=2)
ikb1 = InlineKeyboardButton(text='–°–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º',
                            url='https://t.me/kartoved')
ikb.add(ikb1)

ikb_links = InlineKeyboardMarkup(row_width=1)
dictionary_button = InlineKeyboardButton(text='–°–ª–æ–≤–∞—Ä—å –ö–æ–Ω–¥—Ä–∞—Ç—å–µ–≤–∞',
                            url='rueo.ru')
chat_button = InlineKeyboardButton(text='–ß–∞—Ç —ç—Å–ø–µ—Ä–∞–Ω—Ç–∏—Å—Ç–æ–≤ –≤ Telegram',
                            url='https://t.me/Esperantujoo')
ikb_links.add(dictionary_button, chat_button)


@dp.message_handler(commands=['help'])
async def help(message: types.Message):
    await message.answer(text=HELP_COMMAND, parse_mode='HTML', reply_markup=kb)


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer(text=HELP_COMMAND, parse_mode='HTML', reply_markup=kb)

@dp.message_handler(commands=['contact'])
async def contact(message: types.Message):
    await message.answer(text='–ü–∏—à–∏ –º–Ω–µ –ø—Ä–æ –±–∞–≥–∏ –∏ —Å–ª–æ–≤–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ ü•≥',
                         reply_markup=ikb)

@dp.message_handler(commands=['links'])
async def get_useful_links(message: types.Message):
    await message.answer(text='–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏',
                         reply_markup=ikb_links)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
